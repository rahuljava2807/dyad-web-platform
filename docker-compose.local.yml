version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: dyad-postgres-local
    restart: unless-stopped
    environment:
      POSTGRES_DB: dyad_platform
      POSTGRES_USER: dyad_user
      POSTGRES_PASSWORD: dyad_local_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"  # Use 5433 to avoid conflicts with system PostgreSQL
    networks:
      - dyad-local
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dyad_user -d dyad_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    container_name: dyad-redis-local
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"  # Use 6380 to avoid conflicts
    networks:
      - dyad-local
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # MinIO for local S3-compatible storage (replaces Azure Blob)
  minio:
    image: minio/minio:latest
    container_name: dyad-minio-local
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    networks:
      - dyad-local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create MinIO bucket on startup
  minio-setup:
    image: minio/mc:latest
    container_name: dyad-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - dyad-local
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      mc mb myminio/dyad-files;
      mc policy set public myminio/dyad-files;
      exit 0;
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  dyad-local:
    driver: bridge